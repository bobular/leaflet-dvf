L.RegularPolygon=L.Polygon.extend({statics:{R:6378.137,M_PER_KM:1000},initialize:function(b,a){this._centerLatLng=b;L.Util.setOptions(this,a);L.Polygon.prototype.initialize.call(this,this._getLatLngs(),a)},options:{fill:true,radius:1000,numberOfSides:4,rotation:0,maxDegrees:360},getLatLng:function(){return this._centerLatLng},setRadius:function(a){this.options.radius=a;this._latlngs=this._getLatLngs();this.redraw()},_getLatLngs:function(){var d=this.options.maxDegrees||360;var b=d/Math.max(this.options.numberOfSides,3);var f=d+this.options.rotation;var e=this.options.rotation;var a=[];var c;while(e<f){c=this._getPoint(e);a.push(c);e+=b}return a},_getPoint:function(b){var g=function(j){return j*L.LatLng.DEG_TO_RAD};var a=function(j){return j*L.LatLng.RAD_TO_DEG};var i=g(b);var h=this.options.radius/L.RegularPolygon.M_PER_KM/L.RegularPolygon.R;var d=g(this._centerLatLng.lat);var f=g(this._centerLatLng.lng);var c=Math.asin(Math.sin(d)*Math.cos(h)+Math.cos(d)*Math.sin(h)*Math.cos(i));var e=f+Math.atan2(Math.sin(i)*Math.sin(h)*Math.cos(d),Math.cos(h)-Math.sin(d)*Math.sin(c));c=a(c);e=a(e);return new L.LatLng(c,e)},toGeoJSON:function(){var b={type:"Feature",geometry:{type:"Polygon",coordinates:[[],[]]},properties:this.options};for(var a=0;a<this._latlngs.length;++a){var c=this._latlngs[a];b.geometry.coordinates[0].push([c.lng,c.lat])}return b}});L.regularPolygon=function(b,a){return new L.RegularPolygon(b,a)};